

.navbar {
    position: relative;
    display: flex;
    flex-wrap: wrap; // allow us to do the line break for collapsing content
    align-items: center;
    justify-content: space-between; // space out brand from logo
    padding: $navbar-padding-y $navbar-padding-x;
  
    // Because flex properties aren't inherited, we need to redeclare these first
    // few properties so that content nested within behave properly.
    %container-flex-properties {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: space-between;
    }
  
    .container,
    .container-fluid {
      @extend %container-flex-properties;
    }
  
    @each $breakpoint, $container-max-width in $container-max-widths {
      > .container#{breakpoint-infix($breakpoint, $container-max-widths)} {
        @extend %container-flex-properties;
      }
    }
  }
  
  
  
  .navbar-nav {
    display: flex;
    flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
    padding-left: 0;
    margin-bottom: 0;
    list-style: none;
  
    .nav-link {
      padding-right: 0;
      padding-left: 0;
    }
  
    .dropdown-menu {
      position: static;
      float: none;
    }
  }
  
  
  // Navbar text
  //
  //
  
  .navbar-text {
    display: inline-block;
    padding-top: $nav-link-padding-y;
    padding-bottom: $nav-link-padding-y;
  }
  
  

  .navbar-collapse {
    flex-basis: 100%;
    flex-grow: 1;
    // For always expanded or extra full navbars, ensure content aligns itself
    // properly vertically. Can be easily overridden with flex utilities.
    align-items: center;
  }
  
  
  .navbar-toggler{
    width: 32px;
    height: 28px;
    position: relative;
    margin:0;
    transform: rotate(0deg);
    cursor: pointer;
}
.navbar-toggler span {
    display: block;
    position: absolute;
    height: 5px;
    width: 100%;
    background: #8d8d8d;
    border-radius: 9px;
    opacity: 1;
    left: 0;
    transform: rotate(0deg);
    transition: .25s ease-in-out;
  }
  .navbar-toggler span:nth-child(1) {
    top: 0px;
    transform-origin: left center;
  }
  
  .navbar-toggler span:nth-child(2) {
    top: 10px;

    transform-origin: left center;
  }
  
  .navbar-toggler span:nth-child(3) {
    top:20px;
    transform-origin: left center;
  }
  
  .navbar-toggler.open span:nth-child(1) {
    transform: rotate(45deg);
    top: -6px;
    left: 8px;
  }
  
  .navbar-toggler.open span:nth-child(2) {
    width: 0%;
    opacity: 0;
  }
  
  .navbar-toggler.open span:nth-child(3) {
    transform: rotate(-45deg);
    top: 17px;
    left: 8px;
  }
  
  .navbar-expand {
    @each $breakpoint in map-keys($grid-breakpoints) {
      $next: breakpoint-next($breakpoint, $grid-breakpoints);
      $infix: breakpoint-infix($next, $grid-breakpoints);
  
      &#{$infix} {
        @include media-breakpoint-down($breakpoint) {
          %container-navbar-expand-#{$breakpoint} {
            padding-right: 0;
            padding-left: 0;
          }
  
          > .container,
          > .container-fluid {
            @extend %container-navbar-expand-#{$breakpoint};
          }
  
          @each $size, $container-max-width in $container-max-widths {
            > .container#{breakpoint-infix($size, $container-max-widths)} {
              @extend %container-navbar-expand-#{$breakpoint};
            }
          }
        }
  
        @include media-breakpoint-up($next) {
          flex-flow: row nowrap;
          justify-content: flex-start;
  
          .navbar-nav {
            flex-direction: row;
  
            .dropdown-menu {
              position: absolute;
            }
  
            .nav-link {
              padding-right: $navbar-nav-link-padding-x;
              padding-left: $navbar-nav-link-padding-x;
            }
          }
  
          // For nesting containers, have to redeclare for alignment purposes
          %container-nesting-#{$breakpoint} {
            flex-wrap: nowrap;
          }
  
          > .container,
          > .container-fluid {
            @extend %container-nesting-#{$breakpoint};
          }
  
          @each $size, $container-max-width in $container-max-widths {
            > .container#{breakpoint-infix($size, $container-max-widths)} {
              @extend %container-nesting-#{$breakpoint};
            }
          }
  
          .navbar-collapse {
            display: flex !important; // stylelint-disable-line declaration-no-important
  
            // Changes flex-bases to auto because of an IE10 bug
            flex-basis: auto;
          }
  
          .navbar-toggler {
            display: none;
          }
        }
      }
    }
  }
  
  
  // Navbar themes
  //
  // Styles for switching between navbars with light or dark background.
  
  // Dark links against a light background
  .navbar-light {
    .navbar-brand {
      color: $navbar-light-brand-color;
  
      @include hover-focus() {
        color: $navbar-light-brand-hover-color;
      }
    }
  
    .navbar-nav {
      .nav-link {
        color: $navbar-light-color;
       
        @include hover-focus() {
          color: $navbar-light-hover-color;
        }
  
        &.disabled {
          color: $navbar-light-disabled-color;
        }
      }
  
      .show > .nav-link,
      .active > .nav-link,
      .nav-link.show,
      .nav-link.active {
        color: $navbar-light-active-color;
      }
    }
  
    .navbar-toggler {
      color: $navbar-light-color;
      border-color: $navbar-light-toggler-border-color;
    }
  
    .navbar-toggler-icon {
      background-image: escape-svg($navbar-light-toggler-icon-bg);
    }
  
    .navbar-text {
      color: $navbar-light-color;
      a {
        color: $navbar-light-active-color;
  
        @include hover-focus() {
          color: $navbar-light-active-color;
        }
      }
    }
  }
  
  // White links against a dark background
  .navbar-dark {
    .navbar-brand {
      color: $navbar-dark-brand-color;
  
      @include hover-focus() {
        color: $navbar-dark-brand-hover-color;
      }
    }
  
    .navbar-nav {
      .nav-link {
        color: $navbar-dark-color;
  
        @include hover-focus() {
          color: $navbar-dark-hover-color;
        }
  
        &.disabled {
          color: $navbar-dark-disabled-color;
        }
      }
  
      .show > .nav-link,
      .active > .nav-link,
      .nav-link.show,
      .nav-link.active {
        color: $navbar-dark-active-color;
      }
    }
  
    .navbar-toggler {
      color: $navbar-dark-color;
      border-color: $navbar-dark-toggler-border-color;
    }
  
    .navbar-toggler-icon {
      background-image: escape-svg($navbar-dark-toggler-icon-bg);
    }
  
    .navbar-text {
      color: $navbar-dark-color;
      a {
        color: $navbar-dark-active-color;
  
        @include hover-focus() {
          color: $navbar-dark-active-color;
        }
      }
    }
  }
  